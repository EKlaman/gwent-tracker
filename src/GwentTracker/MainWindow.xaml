<mahApps:MetroWindow x:Class="GwentTracker.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:GwentTracker"
        xmlns:mahApps="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
        mc:Ignorable="d"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        Background="{DynamicResource MaterialDesignPaper}"
        FontFamily="{DynamicResource MaterialDesignFont}"
        x:Name="Window"
        Title="MainWindow" Height="350" SizeToContent="Width">
    <mahApps:MetroWindow.RightWindowCommands>
        <mahApps:WindowCommands>
            <materialDesign:PopupBox StaysOpen="True">
                <StackPanel Margin="8,8,8,8">
                    <TextBlock Style="{StaticResource MaterialDesignTitleTextBlock}" Margin="8,8,8,16">OPTIONS</TextBlock>
                    <CheckBox x:Name="AutoLoad">Auto Load</CheckBox>
                </StackPanel>
            </materialDesign:PopupBox>
        </mahApps:WindowCommands>
    </mahApps:MetroWindow.RightWindowCommands>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="204"/>
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0" Margin="4 0 4 0">
            <materialDesign:Card Margin="0 4 0 0" x:Name="SelectedCard">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="277" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <Image Stretch="UniformToFill" Source="{Binding SelectedCard.Texture, IsAsync=True}"/>
                    <WrapPanel Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Bottom">

                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Margin="8 0 8 0">
                            <TextBlock Text="{Binding SelectedCard.Stength}"/>
                        </Button>
                        <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Margin="0 0 8 0">
                            <materialDesign:PackIcon Kind="Sword" />
                        </Button>
                    </WrapPanel>

                    <StackPanel Grid.Row="1" Margin="8 24 8 0" >
                        <TextBlock FontWeight="Bold" Text="{Binding Path=SelectedCard.Name}" />
                        <TextBlock TextWrapping="Wrap" VerticalAlignment="Center" Text="{Binding SelectedCard.Flavor}" />
                    </StackPanel>
                    <StackPanel HorizontalAlignment="Right" Grid.Row="2" Orientation="Horizontal" Margin="8">
                        <Button Style="{StaticResource MaterialDesignToolButton}" Width="30" Padding="2 0 2 0"
                                materialDesign:RippleAssist.IsCentered="True">
                            <materialDesign:PackIcon Kind="MapMarker" />
                        </Button>
                    </StackPanel>
                </Grid>
            </materialDesign:Card>
            <ItemsControl x:Name="Messages">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <materialDesign:Card Margin="0 4 0 0" Background="{DynamicResource PrimaryHueLightBrush}"
                      Foreground="{DynamicResource PrimaryHueLightForegroundBrush}"
                      Padding="8">
                            <StackPanel>
                                <TextBlock FontWeight="Bold" Text="{Binding Name}" />
                                <TextBlock Text="{Binding Description}" />
                            </StackPanel>
                        </materialDesign:Card>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </StackPanel>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <materialDesign:PackIcon Grid.Column="0" Grid.Row="0" Kind="Magnify" Foreground="{Binding ElementName=NameTextBox, Path=BorderBrush}" Height="16" VerticalAlignment="Center" />
                <TextBox Grid.Column="1" Margin="4 0 4 0" Grid.Row="0" x:Name="FilterString" materialDesign:HintAssist.Hint="Filter" MinWidth="200"/>
                <Button Grid.Column="2" Grid.Row="0" HorizontalAlignment="Right" Width="Auto" x:Name="AddFilter">Add</Button>
            </Grid>
            <ItemsControl Grid.Row="1" x:Name="Filters" Margin="0 4 0 4">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <materialDesign:Chip Content="{Binding}"
                                             Margin="4 0 0 0"
                                 IsDeletable="True"
                                 DeleteCommand="{Binding Path=DataContext.RemoveFilter, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                 DeleteCommandParameter="{Binding}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
            <ProgressBar Grid.Row="2" x:Name="LoadGameProgress" IsIndeterminate="True" />
            <Grid Grid.Row="3">
                <DataGrid IsReadOnly="True" x:Name="Cards" AutoGenerateColumns="False" HorizontalAlignment="Stretch">
                    <DataGrid.Triggers>
                        
                    </DataGrid.Triggers>
                    <DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Obtained}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" From="#C8E6C9" FillBehavior="Stop" Duration="0:0:3"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Binding="{Binding Obtained, NotifyOnTargetUpdated=True}"/>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}"/>
                        <DataGridTextColumn Header="Copies" Binding="{Binding Copies}"/>
                        <DataGridTextColumn Header="Deck" Binding="{Binding Deck}"/>
                        <DataGridTextColumn Header="Type" Binding="{Binding Type}"/>
                        <DataGridTextColumn Header="Location" Binding="{Binding Location}"/>
                        <DataGridTextColumn Header="Region" Binding="{Binding Region}"/>
                    </DataGrid.Columns>
                </DataGrid>
                <materialDesign:Snackbar x:Name="Notifications" MessageQueue="{materialDesign:MessageQueue}" />
            </Grid>
        </Grid>
        
    </Grid>
</mahApps:MetroWindow>
