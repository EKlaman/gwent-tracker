<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:GwentTracker.ViewModels;assembly=GwentTracker"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="GwentTracker.Views.MainWindow"
        Icon="/Assets/avalonia-logo.ico"
        Title="GwentTracker"
        Width="800"
        Height="400">

    <!-- <Design.DataContext> -->
    <!--     <vm:MainWindowViewModel/> -->
    <!-- </Design.DataContext> -->
    
    <Grid ColumnDefinitions="204, *">
        <StackPanel Grid.Column="0" Width="204" VerticalAlignment="Top">
            <Grid Margin="4 4 4 0" x:Name="SelectedCard" ColumnDefinitions="*" RowDefinitions="Auto, Auto, Auto">
                <Image Grid.Row="0" Height="275" Source="{Binding Path=SelectedCard.Texture}" HorizontalAlignment="Center"/>
                <!--<WrapPanel Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Margin="8 0 8 0">
                        <TextBlock Text="{Binding SelectedCard.Stength}"/>
                    </Button>
                    <Button Style="{StaticResource MaterialDesignFloatingActionMiniAccentButton}" Margin="0 0 8 0">
                        <materialDesign:PackIcon Kind="Sword" />
                    </Button>
                </WrapPanel>-->
                <StackPanel Grid.Row="1" Margin="8 8 8 0" >
                    <TextBlock FontWeight="Bold" Text="{Binding Path=SelectedCard.Name}" />
                    <TextBlock TextWrapping="Wrap" VerticalAlignment="Center" Text="{Binding Path=SelectedCard.Flavor}" />
                </StackPanel>
                <StackPanel HorizontalAlignment="Right" Grid.Row="2" Orientation="Horizontal" Margin="8">
                    <Button Width="30" Padding="2 0 2 0" IsEnabled="false">
                        <DrawingPresenter Height="30">
                            <DrawingPresenter.Drawing>
                                <GeometryDrawing Brush="#FF000000" Geometry="M 11.5,7C 12.8807,7 14,8.11929 14,9.5C 14,10.8807 12.8807,12 11.5,12C 10.1193,12 9,10.8807 9,9.5C 9,8.11929 10.1193,7 11.5,7 Z M 11.5,8C 10.6716,8 10,8.67158 10,9.5C 10,10.3284 10.6716,11 11.5,11C 12.3284,11 13,10.3284 13,9.5C 13,8.67158 12.3284,8 11.5,8 Z M 6.80047,12.3574L 11.5,20.0867L 16.1995,12.3574L 16.2002,12.3578C 16.7077,11.5249 17,10.5466 17,9.5C 17,6.46244 14.5376,4 11.5,4C 8.46243,4 6,6.46244 6,9.5C 6,10.5466 6.29233,11.5249 6.7998,12.3578L 6.80047,12.3574 Z M 17.054,12.8769L 11.5,22.0116L 5.94601,12.8769L 5.94522,12.8774C 5.34548,11.8931 5,10.7369 5,9.50001C 5,5.91016 7.91015,3.00001 11.5,3.00001C 15.0898,3.00001 18,5.91016 18,9.50001C 18,10.7369 17.6545,11.8931 17.0548,12.8774L 17.054,12.8769 Z "/>
                            </DrawingPresenter.Drawing>
                        </DrawingPresenter>	
                    </Button>
                </StackPanel>
            </Grid>
            <!-- <ItemsControl x:Name="Messages"> -->
            <!--     <ItemsControl.ItemTemplate> -->
            <!--         <DataTemplate> -->
            <!--             <materialDesign:Card Margin="0 4 0 0" Background="{DynamicResource PrimaryHueLightBrush}" -->
            <!--           Foreground="{DynamicResource PrimaryHueLightForegroundBrush}" -->
            <!--           Padding="8"> -->
            <!--                 <StackPanel> -->
            <!--                     <TextBlock FontWeight="Bold" Text="{Binding Name}" /> -->
            <!--                     <TextBlock Text="{Binding Description}" /> -->
            <!--                 </StackPanel> -->
            <!--             </materialDesign:Card> -->
            <!--         </DataTemplate> -->
            <!--     </ItemsControl.ItemTemplate> -->
            <!-- </ItemsControl> -->
        </StackPanel>
        <Grid Grid.Column="1" RowDefinitions="Auto, Auto, Auto, 15, *">
            <Grid Grid.Row="0" ColumnDefinitions="Auto, Auto, Auto">
                <!-- <materialDesign:PackIcon Grid.Column="0" Grid.Row="0" Kind="Magnify" Foreground="{Binding ElementName=NameTextBox, Path=BorderBrush}" Height="16" VerticalAlignment="Center" /> -->
                <TextBox Grid.Column="1" Margin="4 0 4 0" Grid.Row="0" x:Name="FilterString" Watermark="Filter" MinWidth="200"/>
                <Button Grid.Column="2" Grid.Row="0" HorizontalAlignment="Right" x:Name="AddFilter" Content="Add" />
            </Grid>
            <ItemsControl Grid.Row="1" x:Name="Filters" Margin="0 4 0 4">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <Button Content="X"></Button>
                        <!-- <materialDesign:Chip Content="{Binding}" -->
                        <!--                      Margin="4 0 0 0" -->
                        <!--          IsDeletable="True" -->
                        <!--          DeleteCommand="{Binding Path=DataContext.RemoveFilter, RelativeSource={RelativeSource AncestorType={x:Type Window}}}" -->
                        <!--          DeleteCommandParameter="{Binding}"/> -->
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
            </ItemsControl>
            <DockPanel Grid.Row="3">
                <ProgressBar DockPanel.Dock="Right" Width="50" Name="LoadGameProgress" IsIndeterminate="True" />
                <TextBlock DockPanel.Dock="Left" Name="Status" />
            </DockPanel>
            <Grid Grid.Row="4">
                <DataGrid IsReadOnly="True" Name="Cards" AutoGenerateColumns="False" HorizontalAlignment="Stretch">
                    <!--<DataGrid.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Obtained}" Value="True">
                                    <DataTrigger.EnterActions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <ColorAnimation Storyboard.TargetProperty="(Background).(SolidColorBrush.Color)" From="#C8E6C9" FillBehavior="Stop" Duration="0:0:3"/>
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </DataTrigger.EnterActions>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>-->
                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn Binding="{Binding Obtained}"/>
                        <DataGridTextColumn Header="Name" Binding="{Binding Name}"/>
                        <DataGridTextColumn Header="Copies" Binding="{Binding Copies}"/>
                        <DataGridTextColumn Header="Deck" Binding="{Binding Deck}"/>
                        <DataGridTextColumn Header="Type" Binding="{Binding Type}"/>
                        <DataGridTextColumn Header="Location" Binding="{Binding Location}"/>
                        <DataGridTextColumn Header="Region" Binding="{Binding Region}"/>
                    </DataGrid.Columns>
                </DataGrid>
            </Grid>
        </Grid>
        
    </Grid>

</Window>
